# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master


pool:
  name: 'KinsonDigital'


variables:
  - name: solution
    value: '**/*.sln'
  - name:  buildPlatform
    value: 'any cpu'
  - name: buildConfiguration
    value: 'Release'
  - name: coverageReportDirName
    value: 'CoverageReport'
  - name: appName
    value: 'ParticleEngine'
  - name: pool
    value: 'KinsonDigital'


stages:
- stage: Init_Build_Stage
  displayName: 'Init & Build'
  pool: '$(pool)'
  jobs:
  - job: 'Init_Build_Job'
    displayName: 'Init & Build Job'
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      displayName: Restore $(appName) Packages
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      displayName: Build $(appName) Solution
      inputs:
        solution: '**\*Engine.csproj'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        clean: true


- stage: 'Testing_Stage'
  displayName: 'Testing'
  pool: '$(pool)'
  jobs:
  - job: 'Testing_Job'
    displayName: 'Testing'
    steps:
    - task: DotNetCoreCLI@2
      displayName: "Run $(appName) Tests & Collect Code Coverage"
      inputs:
        command: 'test'
        projects: '**\*[Tt]ests\*.csproj'
        arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
        publishTestResults: true
        testRunTitle: 'Project Unit Test Results'

    - task: reportgenerator@4
      displayName: "Generate $(appName) Code Coverage Reports"
      inputs:
        reports: '**\*.cobertura.xml'
        targetdir: 'CoverageReport'
        sourcedirs: '$(System.DefaultWorkingDirectory)\$(appName)'

    - task: PublishCodeCoverageResults@1
      displayName: "Publish $(appName) Code Coverage Results"
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)\$(coverageReportDirName)\Cobertura.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)\$(coverageReportDirName)'


- stage: 'Create_Build_Artifact_Stage'
  displayName: 'Create Build Artifact'
  pool: '$(pool)'
  jobs:
  - job: 'Create_Artifact_Job'
    displayName: 'Create Artifact'
    steps: 
    - task: DotNetCoreCLI@2
      displayName: 'Create $(appName) Nuget Package Artifact'
      inputs:
        command: 'pack'
        packagesToPack: '$(System.DefaultWorkingDirectory)\$(appName)\$(appName).csproj'
        configuration: '$(buildConfiguration)'
        versioningScheme: 'off'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish $(appName) Build Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

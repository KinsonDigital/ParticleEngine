# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master


pool:
  name: 'KinsonDigital'


variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  coverageReportDirName: 'CoverageReport'
  appName: 'KDParticleEngine'

steps:
- task: NuGetToolInstaller@1


- task: NuGetCommand@2
  displayName: Restore Packages
  inputs:
    restoreSolution: '$(solution)'


- task: DotNetCoreCLI@2
  displayName: "Run Tests & Collect Code Coverage"
  inputs:
    command: 'test'
    projects: '**\*[Tt]ests\*.csproj'
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
    publishTestResults: true
    testRunTitle: 'Project Unit Test Results'


- task: reportgenerator@4
  displayName: "Generate Code Coverage Reports"
  inputs:
    reports: '**\*.cobertura.xml'
    targetdir: 'CoverageReport'
    sourcedirs: '$(System.DefaultWorkingDirectory)\$(appName)'


- task: PublishCodeCoverageResults@1
  displayName: "Publish Code Coverage Results"
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)\$(coverageReportDirName)\Cobertura.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)\$(coverageReportDirName)'


- task: DotNetCoreCLI@2
  displayName: 'Create Nuget Package Artifact'
  inputs:
    command: 'pack'
    packagesToPack: '$(System.DefaultWorkingDirectory)\$(appName)\$(appName).csproj'
    configuration: '$(buildConfiguration)'
    versioningScheme: 'off'


- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'